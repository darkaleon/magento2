<?php
declare(strict_types=1);

namespace Alexx\Blog\Model\ResourceModel;

use Alexx\Blog\Api\Data\BlogInterface;
use Alexx\Blog\Model\Media\Config as BlogMediaConfig;
use Magento\Catalog\Model\ImageUploader;
use Magento\Framework\Model\ResourceModel\Db\AbstractDb;
use Magento\Framework\Model\ResourceModel\Db\Context;
use Magento\Framework\Model\AbstractModel;

/**
 * BlogPosts ResourceModel
 */
class BlogPosts extends AbstractDb
{
    /**@var ImageUploader */
    private $imageUploader;
    /**@var BlogMediaConfig */
    private $blogMediaConfig;

    /**
     *
     * @param Context $context
     * @param ImageUploader $imageUploader
     * @param BlogMediaConfig $blogMediaConfig
     * @param string $connectionName
     */
    public function __construct(
        Context $context,
        ImageUploader $imageUploader,
        BlogMediaConfig $blogMediaConfig,
        $connectionName = null
    ) {
        $this->blogMediaConfig = $blogMediaConfig;
        $this->imageUploader = $imageUploader;
        parent::__construct($context, $connectionName);
    }

    /**
     * @inheritDoc
     */
    public function save(AbstractModel $object)
    {
        $pictureData = $object->getData(BlogInterface::FIELD_PICTURE);

        if (is_array($pictureData)) {
            if (!empty($pictureData[0]['file'])) {
                $pictureData = $this->imageUploader->moveFileFromTmp($pictureData[0]['file'], true);
                $object->setData(BlogInterface::FIELD_PICTURE, $pictureData);
            }
        }

        if (is_array($pictureData)) {
            $object->setData(
                BlogInterface::FIELD_PICTURE,
                $pictureData[0]['path'] ?? $this->blogMediaConfig->extractRelativePath($pictureData[0]['url'])
            );
        }
        return parent::save($object); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritDoc
     */
    protected function _construct()
    {
        $this->_init(BlogInterface::BLOG_TABLE, BlogInterface::BLOG_ID);
    }
}
