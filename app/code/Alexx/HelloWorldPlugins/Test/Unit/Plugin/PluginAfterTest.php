<?php


namespace Alexx\HelloWorldPlugins\Test\Unit\Plugin;


use Alexx\HelloWorld\Model\Hello;
use Alexx\HelloWorldApi\Api\Data\HelloApiInterface;
use Alexx\HelloWorldPlugins\Plugin\PluginAfter;

class PluginAfterTest extends \PHPUnit\Framework\TestCase
{
    private $parentObject;

    private $pluginObject;

    protected function setUp()
    {
        $this->pluginObject = new PluginAfter();
        $this->parentObject = new Hello();
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testInstance()
    {
        $this->assertInstanceOf(PluginAfter::class, $this->pluginObject);
    }

    public function testImplementsHelloApiInterface()
    {
        $this->assertInstanceOf(HelloApiInterface::class, $this->parentObject);
    }


    public function testBefore()
    {
        $inStr = __('Hello world')->__toString();
        $outStr = $inStr . '_suffix';

        $this->assertEquals($inStr, $this->parentObject->getHello());



        $this->assertEquals($outStr, $this->pluginObject->afterGetHello($this->parentObject, $inStr));
    }
}

