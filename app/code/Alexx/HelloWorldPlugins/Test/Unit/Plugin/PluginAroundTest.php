<?php

namespace Alexx\HelloWorldPlugins\Test\Unit\Plugin;

use Alexx\HelloWorld\Model\Hello;
use Alexx\HelloWorldApi\Api\Data\HelloApiInterface;
use Alexx\HelloWorldPlugins\Plugin\PluginAround;

class PluginAroundTest extends \PHPUnit\Framework\TestCase
{
    private $parentObject;

    private $pluginObject;

    protected function setUp()
    {
        $this->pluginObject = new PluginAround();
        $this->parentObject = new Hello();
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testInstance()
    {
        $this->assertInstanceOf(PluginAround::class, $this->pluginObject);
    }

    public function testImplementsHelloApiInterface()
    {
        $this->assertInstanceOf(HelloApiInterface::class, $this->parentObject);
    }


    public function testAround()
    {
        $inStr = __('Hello world')->__toString();
        $outStr = '<h1>' . $inStr . '</h1>';

        $this->assertEquals($inStr, $this->parentObject->getHello());

        $proceed = function () {
            return  __('Hello world')->__toString();
        };

        $this->assertEquals($outStr, $this->pluginObject->aroundGetHello($this->parentObject, $proceed, $inStr));
    }
}
